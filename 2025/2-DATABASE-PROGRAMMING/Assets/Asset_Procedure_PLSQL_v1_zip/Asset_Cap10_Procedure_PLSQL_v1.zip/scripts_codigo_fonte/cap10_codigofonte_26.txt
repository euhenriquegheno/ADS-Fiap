CREATE OR REPLACE PROCEDURE PRC_DB_CALC_VENDAS_LOJA_PROD_ANO_MES (
P_NR_LOJA IN DB_PRODUTO_LOJA.NR_LOJA%TYPE,
P_NR_ANO IN NUMBER,
P_NR_MES IN NUMBER,
P_QT_TOT_PRD_VENDIDOS OUT NUMBER,
P_STATUS_PROCESSAMENTO IN OUT VARCHAR2
)
IS
	-- VARIÁVEL CRIADA PARA ARMAZENAR A QUANTIDADE TOTAL DE LINHAS PROCESSADAS.
	V_QT_LINHAS_PROCESSADAS NUMBER := 00;
	--
	-- CRIAMOS A VARIÁVEL DO TIPO RECORD PARA ARMAZENAR OS DADOS QUE DEVEM SER
	-- INSERIDOS NA TABELA DB_RESUMO_VENDA_PROD_ANO_MES.
	V_REC_TAB_DB_RESUMO_VENDA_PROD DB_RESUMO_VENDA_PROD_ANO_MES%ROWTYPE;
BEGIN
	-- ANTES DE REALIZAR O PROCESSAMENTO, LIMPAMOS TODOS OS DADOS DA TABELA.
	DELETE FROM DB_RESUMO_VENDA_PROD_ANO_MES WHERE NR_LOJA = P_NR_LOJA AND
	NR_ANO = P_NR_ANO AND NR_MES = P_NR_MES;

	P_QT_TOT_PRD_VENDIDOS := 00;
	-- Para cada produto exibido vamos verificar se existe vendas realizadas 
	-- do produto durante o ano e mês corrente
	FOR X IN (	SELECT CD_PRODUTO_LOJA, CD_PRODUTO 
				FROM DB_PRODUTO_LOJA 
                WHERE NR_LOJA = P_NR_LOJA
	)
	LOOP
	    -- SELECIONA O NOME DA LOJA A PARTIR DO NÚMERO DA LOJA
		BEGIN	
			SELECT 	NM_LOJA 
			INTO 	V_REC_TAB_DB_RESUMO_VENDA_PROD.NM_LOJA 
			FROM	DB_LOJA
			WHERE 	NR_LOJA = P_NR_LOJA;
			-- SELECIONA O NOME DO PRODUTO A PARTIR DO CÓDIGO DO PRODUTO
			SELECT 	DS_PRODUTO 
			INTO 	V_REC_TAB_DB_RESUMO_VENDA_PROD.DS_PRODUTO
			FROM	DB_PRODUTO
			WHERE 	CD_PRODUTO = x.cd_produto;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				RAISE_APPLICATION_ERROR(-20040, 'NÃO EXISTE A LOJA OU O PRODUTO CADASTRADO');
		END;
		
		-- Instrução SQL que calcula a quantidade total de vendas de cada produto
		-- de uma determinada loja, agrupado por ano e mês de venda.
		-- veja os parâmetros de filtros (cd_produto_loja, ano e mês)
		SELECT  COUNT(IP.QT_PEDIDO) QTD_TOT_VENDAS,
                SUM(P.VL_TOT_PEDIDO) VAL_TOT_VENDAS,
                SUM(IP.VL_LUCRO_LIQUIDO) VAL_TOT_LUCRO_LIQUIDO,
                MAX(P.VL_TOT_PEDIDO) VAL_MAIOR_VALOR_PEDIDO,
                MIN(P.VL_TOT_PEDIDO) VAL_MENOR_VALOR_PEDIDO,
                ROUND(AVG(P.VL_TOT_PEDIDO),2) VAL_MEDIO_VALOR_PEDIDO
		INTO 	V_REC_TAB_DB_RESUMO_VENDA_PROD.QT_VENDAS,
                V_REC_TAB_DB_RESUMO_VENDA_PROD.VL_TOTAL_VENDA,
                V_REC_TAB_DB_RESUMO_VENDA_PROD.VL_TOTAL_LUCRO_LIQUIDO,
                V_REC_TAB_DB_RESUMO_VENDA_PROD.VL_MAIOR_VENDA_FEITA,
                V_REC_TAB_DB_RESUMO_VENDA_PROD.VL_MENOR_VENDA,
                V_REC_TAB_DB_RESUMO_VENDA_PROD.VL_MEDIO_VENDA        
		FROM    DB_PRODUTO_LOJA PL  INNER JOIN DB_ITEM_PEDIDO IP
		ON		(PL.CD_PRODUTO_LOJA = IP.CD_PRODUTO_LOJA) INNER JOIN DB_PEDIDO P
		ON		(IP.NR_LOJA = P.NR_LOJA AND IP.NR_PEDIDO = P.NR_PEDIDO)
		WHERE   PL.NR_LOJA = P_NR_LOJA
		AND    	IP.CD_PRODUTO_LOJA = x.cd_produto_loja
		AND    	EXTRACT( YEAR FROM P.DT_PEDIDO) = P_NR_ANO
		AND    	EXTRACT( MONTH FROM P.DT_PEDIDO) = P_NR_MES;
		
		-- ACUMULA VALORES DAS QUANTIDADES VENDIDAS DE TODOS OS PRODUTOS.
		P_QT_TOT_PRD_VENDIDOS := P_QT_TOT_PRD_VENDIDOS + V_REC_TAB_DB_RESUMO_VENDA_PROD.QT_VENDAS;
		
		-- Para cada linha, processada, vamos armazenar as informações na tabela resumo.
		BEGIN
            -- ASSOCIAMOS OS PARÂMETROS DE ENTRADA NA VARIÁVEL DO TIPO RECORD
            -- PARA MELHORAR A LEGIBILIDADE DO CÓDIGO
            -- OS DEMAIS CONTEÚDOS FORAM ASSOCIADOS LOGO ACIMA.
            V_REC_TAB_DB_RESUMO_VENDA_PROD.CD_PRODUTO_LOJA := x.cd_produto;
            V_REC_TAB_DB_RESUMO_VENDA_PROD.NR_ANO   := P_NR_ANO;
            V_REC_TAB_DB_RESUMO_VENDA_PROD.NR_ANO   := P_NR_MES;
            V_REC_TAB_DB_RESUMO_VENDA_PROD.NR_LOJA  := P_NR_LOJA;
            
            -- INSERE A VARIÁVEL RECORD COMPLETAMENTE PREENCHIDA
            -- DENTRO DA TABELA DB_RESUMO_VENDA_PROD_ANO_MES
			INSERT INTO DB_RESUMO_VENDA_PROD_ANO_MES VALUES
            V_REC_TAB_DB_RESUMO_VENDA_PROD;
            
			-- Armazena a quantidade todal de transações pendentes,
			--	 Usando o atributo do cursor implícito SQL%ROWCOUNT
			V_QT_LINHAS_PROCESSADAS := V_QT_LINHAS_PROCESSADAS + SQL%ROWCOUNT;
			
        EXCEPTION
			WHEN OTHERS THEN
				DBMS_OUTPUT.PUT_LINE('ERRO NO INSERT DA TABELA DB_RESUMO_VENDA_PRODUTO_ANO, CODIGO PRODUTO (' || X.CD_PRODUTO_LOJA || ') ' || SQLERRM);
        END;
    END LOOP;
	
	IF V_QT_LINHAS_PROCESSADAS > 0 THEN
		P_STATUS_PROCESSAMENTO := 'SUCESSO';
	END IF;
	
	-- Após o final do processamento, se tudo ocorreu bem, 
	-- confirmar as transações pendentes.
	COMMIT;
	
END PRC_DB_CALC_VENDAS_LOJA_PROD_ANO_MES;


-- SCRIPT QUE EXECUTA ESSA PROCEDURE
--
SET SERVEROUTPUT ON;
DECLARE
V_QTD_TOT_PRODUTOS_VENDIDOS NUMBER;
V_STATUS_PROCESSAMENTO VARCHAR2(40) := 'NÃO PROCESSADO';
BEGIN
	PRC_DB_CALC_VENDAS_LOJA_PROD_ANO_MES(1, 2024, 1, 
                    V_QTD_TOT_PRODUTOS_VENDIDOS, 
                    V_STATUS_PROCESSAMENTO);
	DBMS_OUTPUT.PUT_LINE('STATUS DO PROCESSAMENTO:' || V_STATUS_PROCESSAMENTO);
END;

